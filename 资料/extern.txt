一般用在变量名前或函数名前，作用是用来说明“此变量/函数是在别处定义的，要在此处引用”，extern这个关键字大部分读者应该是在变量的存储类型这一类的内容中

C语言提供了一下几种不同的存储类型：

（1）  自动变量（auto）

（2）  静态变量（static）

（3）  外部变量（extern）

（4）  寄存器变量（register）


定义：表示创建变量或分配存储单元

声明：说明变量的性质，但并不分配存储单元

声明可以多次，定义只能一次

extern int i; //是声明，不是定义，没有分配内存

int i; //是定义

c语言有一个约定: 凡是在对应的.c文件中, 有那个函数的实现的, 就不加extern, 凡是没有对应实现的, 就需要加extern.

为了在C++代码中调用用C写成的库文件，就需要用extern "C"来告诉编译器:这是一个用C写成的库文件，请用C的方式来链接它们。

#ifdef __cplusplus // 用来识别编译器
extern "C" {
#endif
//一段代码
#ifdef __cplusplus
}
#endif

在c++中，为了支持重载机制，在编译生成的汇编码中，要对函数的名字进行一些处理，加入比如函数的返回类型等等.而在C中，只是简单的函数名字而已，不会加入其他的信息.

extern 是 C/C++ 语言中表明函数和全局变量作用范围（可见性）的关键字，该关键字告诉编译器，其声明的函数和变量可以在本模块或其它模块中使用。

C语言不支持 extern "C" 关键字

extern "C" 只是 C++ 的关键字，不是 C 的

被 extern "C" 修饰的目标一般是对一个全局C或者 C++ 函数的声明

extern "C" 这个关键字声明的真实目的，就是实现 C++ 与C及其它语言的混合编程

外部函数在整个源程序中有效，一般形式： extren 类型说明符 函数名（形参表）